{
  "productInfo" : {
    "company" : "HighByte",
    "product" : "IntelligenceHub",
    "version" : "4.2.0",
    "build" : "2025.6.24.320",
    "stage" : "Alpha"
  },
  "license" : {
    "signature" : "kxSD7MUjD9xi83llmP1xiAxP3sidqk38Dl8kKFeyHZ/RDIPST59lytFmpumY+FOPP/EPcDN6cGK9T9kkhosbVXVIWZoI2wHinMJKIbOeCC1Sa3v6/SMEpT27FELkKwbKeApeNGVgAc+nw1q+czkpuFg2NVUReaD/ddh/LEw46xO0McnTPL1bmoEdEBW4bUutact8l3WT9BoU1bnMkZqA0kQuLrTBeOPZn87Vuq5ATSYm5X06+4NndBhAQifkNxdeDQopSMSyc0ZDFRd1ySeu7JMdlh25Vx1HpuJX6n4uBFMoI09XgMA+lXhOass1SGPBTtRnlQqdUCznfImtXa84wA==",
    "license" : "{\"licenseVersion\":1,\"licenseNumber\":\"5412456618\",\"companyName\":\"Automation\",\"startDate\":\"2023-09-06\",\"endDate\":\"2024-08-31\",\"entitlements\":[\"product_hb_enterprise\"],\"productVersion\":\"\"}"
  },
  "project" : {
    "version" : 11,
    "connections" : [ {
      "name" : "AspenTech",
      "uri" : "ip21://ec2-34-215-151-255.us-west-2.compute.amazonaws.com:45390",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionString" : "Driver={AspenTech SQLplus};Host=localhost;Port=10014;READONLY=Yes",
        "connectTimeoutSeconds" : 1,
        "requestTimeoutMS" : 10000,
        "compression" : "GZIP",
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "GfhltZ+0wASgwZ/7j/rb6Q==",
            "ciphertext" : "pGa2jqNdzNpxDjfB6wNUQg=="
          }
        }
      }
    }, {
      "name" : "AzureBlobStorage",
      "uri" : "azure.blob://AzureBlobStorage",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : true,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "endpointURL" : "https://highbytestoragetest.blob.core.windows.net",
        "encryptConnectionString" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "IA7LWcnytjUki+EZetdYUQ==",
            "ciphertext" : "1qhIWfSCji7LNoJmglVBKO06bU2qVzQVju6DZ6P1D1F7aXK+bnaW/66O2Nz6lnarh8Df1W/JrkHRzovRf3BYI/ssSZkq47wmgimUDUV+07i/K1aOSIlgimiK0mkeVBwnbtY7P0gSiXpWRrYLtLMMKm0soILTGjCQsZJVtmveUdK74OuvHEVYtpvDHQ8X/+50+c8d/3kbNSlId+bSDQToA4nf6zD93kphdTmZN4C1vuyj5oRubaW78VUyxwwkQpnyVzKVFyLVn424fqraBcTC4QOdgaiJLjpw8HLNttd8jhTkdLh62PCPnLaW1KFdjN7booZBLsSRU7v0i7Qet9NwN1dh12I9tX1+1BCoYHacLHHfF4zWpHjIf/Gmsuht7fi8aDiwZL2881T0qBt50wXzuGnijJUruyg+KxbyrGCiercxfeHr2YzWE9Cjmlgz3Gzkmm03T47Bm1uY8LOS+21vZ5eF2IkDDCjxJBVUC/cUPAmWPtnmUr0ps9lsOzOQj668KZ4KoNHS6AX42IIU8axfKA=="
          }
        }
      }
    }, {
      "name" : "AzureEventHubs",
      "uri" : "azure.eventhub://AzureEventHubs",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "requestTimeoutMS" : 10000,
        "encryptConnectionString" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "uP5qW6IOou8HTQTOGNeYdg==",
            "ciphertext" : "tLigUJh2HCCRZji8OuJ2Eopg6+VUT22HyjJp/dDknhucXMGVHbNqnbpmfTNX1laYH0L/MPAMlv7AKtBOVta4Q/KGeCjH9uNaPQORQtwbMVjbBdG21bGIVQoBmLxcrJAFp7iBSQdqd+hq7o/XEcSwrRjuuU2nHz0sZOwvi7rD2s5osMawIH3wG6v88F2sEAWyH6urIGagJGrceowBJKr3GQ=="
          }
        },
        "eventHubName" : "qaeventhub"
      }
    }, {
      "name" : "AzureIoTEdge",
      "uri" : "azure.iotedge://AzureIoTEdge",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "protocol" : "MQTT"
      }
    }, {
      "name" : "AzureIoTHub",
      "uri" : "azure.iothub://AzureIoTHub",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : true,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "protocol" : "HTTPS",
        "provisionType" : "Connection String",
        "dpsScopeId" : "",
        "encrypt_dpsKey" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "eM7jBW93CG9BWKwb73TjTw==",
            "ciphertext" : "eFwUwxpFNRXWOTNVWqdtaA=="
          }
        },
        "dpsDeviceId" : "",
        "modelId" : "",
        "encryptConnectionString" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "nSh07LuZn3R8OVcgv8PN2Q==",
            "ciphertext" : "sAfBSXA2dL5VTHagu0qBpmhkxzxEy5syiLabCRl3jCqc1E8QEPh536CpFgFLufziqpfnZYNDx1Of4rZTuA3YqBGi2il0kDlXKXSjseAS+EREBeGcqZxTUJBweBmHqhVXTRCCdaMh1HGWyh06zOh3BYKF8JhfQSlX7q2gZQzaNDQ="
          }
        }
      }
    }, {
      "name" : "CSV",
      "uri" : "file.csv://CSV",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "directory" : "/usr/local/highbyte/files/csv-files",
        "processedDirectory" : "/usr/local/highbyte/files/csv-files",
        "errorDirectory" : "/usr/local/highbyte//csv-files"
      }
    }, {
      "name" : "CSVPipelines",
      "uri" : "file.csv://CSV",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "directory" : "/usr/local/highbyte/files/csv-files",
        "processedDirectory" : "/usr/local/highbyte/files/csv-files",
        "errorDirectory" : "/usr/local/highbyte/files/csv-files"
      }
    }, {
      "name" : "FilePipelines",
      "uri" : "file://FilePipelines",
      "description" : "Used to output files from pipelines",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "communicationProtocol" : {
          "type" : "FILE_PROTOCOL"
        },
        "directory" : "/usr/local/highbyte/file",
        "processedDirectory" : "/usr/local/highbyte/file",
        "errorDirectory" : "/usr/local/highbyte/file"
      }
    }, {
      "name" : "InfluxDB",
      "uri" : "influxdb://influxdb",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "url" : "http://influxdb:8086",
        "org" : "highbyte"
      }
    }, {
      "name" : "Kep",
      "uri" : "opc.tcp://localhost:4840",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : {
        "subscriptionRate" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "security" : "None",
        "authentication" : {
          "type" : "Anonymous"
        },
        "connectTimeoutSeconds" : 5,
        "requestTimeoutMS" : 5000,
        "maxItemsPerRead" : 32,
        "maxItemsPerWrite" : 32
      }
    }, {
      "name" : "MQTT",
      "uri" : "mqtt://localhost:1885",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionTimeoutSeconds" : 10,
        "keepAliveSeconds" : 60,
        "requestTimeoutMS" : 5000,
        "ssl" : false,
        "redundantBrokers" : [ ],
        "inputDiscovery" : ""
      }
    }, {
      "name" : "Modbus",
      "uri" : "modbus.tcp://modbus:1502",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectTimeoutSeconds" : 5,
        "requestTimeoutMS" : 2000,
        "addressing" : {
          "zeroBased" : false
        },
        "unitId" : 0
      }
    }, {
      "name" : "OracleDB",
      "uri" : "jdbc.oracledatabase://192.168.1.18:1521",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "database" : "XEPDB1",
        "username" : "testuser",
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "qjlp0u66rEZbmGfSyFMCsA==",
            "ciphertext" : "V43adaY1x5j3M9OR/a4deA=="
          }
        },
        "strategy" : {
          "type" : "default"
        }
      }
    }, {
      "name" : "PackingMachine_spb",
      "uri" : "sparkplug://hivemq:1883",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionTimeoutSeconds" : 10,
        "keepAliveSeconds" : 60,
        "requestTimeoutMS" : 5000,
        "ssl" : false
      }
    }, {
      "name" : "ParquetPipelines",
      "uri" : "file.parquet://ParquetPipelines",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "directory" : "/usr/local/highbyte/file",
        "processedDirectory" : "/usr/local/highbyte/file",
        "errorDirectory" : "/usr/local/highbyte/file"
      }
    }, {
      "name" : "QA_AMAZON_REDSHIFT",
      "uri" : "jdbc.amazonredshift://AmazonRedshift",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "strategy" : {
          "type" : "default"
        },
        "connectString" : "jdbc:redshift://redshift-cluster-1.c8nlvtr1cyvg.us-east-1.redshift.amazonaws.com:5439/dev",
        "username" : "awsuser",
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "f/Ut0nquYi4LFWa3Y6+11g==",
            "ciphertext" : "vTHwcsEEKnh+Sff60X/shA=="
          }
        },
        "database" : ""
      }
    }, {
      "name" : "QA_MQTT_HIVEMQ",
      "uri" : "mqtt://hivemq:1883",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionTimeoutSeconds" : 10,
        "keepAliveSeconds" : 60,
        "requestTimeoutMS" : 5000,
        "ssl" : false,
        "clientId" : "Automation_MQTT",
        "redundantBrokers" : [ ],
        "inputDiscovery" : "",
        "redundantBrokers-newItem" : "",
        "cleanSession" : true,
        "maxInflight" : 1000
      }
    }, {
      "name" : "QA_MQTT_LOCALHOST",
      "uri" : "mqtt://localhost:1885",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionTimeoutSeconds" : 10,
        "keepAliveSeconds" : 60,
        "requestTimeoutMS" : 5000,
        "maxInflight" : 1000,
        "cleanSession" : true
      }
    }, {
      "name" : "QA_MSSQLSERVER",
      "uri" : "jdbc.sqlserver://mssqlserver:1433",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "strategy" : {
          "type" : "default"
        },
        "database" : "highbyte",
        "username" : "SA",
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "HQ1nh3KnCt496QFDq+k++A==",
            "ciphertext" : "MqIyXwyeAvVTFP96hM6VbA=="
          }
        }
      }
    }, {
      "name" : "QA_POSTGRES",
      "uri" : "jdbc.postgresql://qa-postgres:5432",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "database" : "highbyte",
        "username" : "highbyte",
        "strategy" : {
          "type" : "default"
        },
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
            "iv" : "Bsy9QpveXmKDOJrjf7nWVQ==",
            "ciphertext" : "vxuBBC+2Rs4NNhtlJDr/lw=="
          }
        }
      }
    }, {
      "name" : "SpringApp",
      "uri" : "rest.client://springapp",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "authentication" : {
          "type" : "None"
        },
        "ignoreCertificate" : false,
        "baseURL" : "http://qa-rest-spring-app:8081"
      }
    }, {
      "name" : "TestResults",
      "uri" : "mqtt://hivemq:1883",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionTimeoutSeconds" : 10,
        "keepAliveSeconds" : 60,
        "requestTimeoutMS" : 5000,
        "ssl" : false,
        "clientId" : "PipelinesResults",
        "redundantBrokers" : [ ],
        "inputDiscovery" : "",
        "redundantBrokers-newItem" : ""
      }
    }, {
      "name" : "Webhook",
      "uri" : "webhook.server://Webhook:9005",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "authorizationType" : "None",
        "authorizationToken" : "\"1231\\\"23g-+===~55\"",
        "scheme" : "http"
      }
    }, {
      "name" : "Webhook_FlowTriggers",
      "uri" : "webhook.server://Webhook:9006",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "authorizationType" : "None",
        "authorizationToken" : "\"1231\\\"23g-+===~55\"",
        "scheme" : "http"
      }
    } ],
    "conditions" : [ {
      "name" : "Expression",
      "uri" : "condition.custom",
      "tags" : [ ],
      "settings" : {
        "inReferences" : [ "{{Instance.AnyType_string}}" ],
        "expression" : "let i = 10;\r\ni;"
      }
    }, {
      "name" : "IHUB2065_ObjectKeys1",
      "uri" : "condition.custom",
      "description" : "[\n\t\"value\",\n\t\"_name\",\n\t\"_model\"\n]",
      "tags" : [ ],
      "settings" : {
        "inReferences" : [ "{{Instance.AnyType_string}}" ],
        "expression" : "var data = {\"value\":\"test\",\r\n            \"_name\":123,\r\n            \"_model\":\"test2\"};\r\nvar tags = Object.keys(data);\r\ntags"
      }
    }, {
      "name" : "IHUB2065_ObjectKeys2",
      "uri" : "condition.custom",
      "description" : "[\n\t\"ramp10\"\n]",
      "tags" : [ ],
      "settings" : {
        "inReferences" : [ "{{Connection.QA_MQTT_HIVEMQ.ramp10JSON}}" ],
        "expression" : "var data = {{this.currentValue}}\r\nvar tags = Object.keys(data);\r\ntags"
      }
    }, {
      "name" : "IHUB2065_ObjectKeys3",
      "uri" : "condition.custom",
      "tags" : [ ],
      "settings" : {
        "inReferences" : [ "{{Instance.AnyType_string}}" ],
        "expression" : "var data = {{this.currentValue}};\r\ndata[\"test1\"] = 1;\r\ndata[\"test2\"] = 2;\r\nObject.keys(data);"
      }
    }, {
      "name" : "TestAggCondition",
      "uri" : "condition.aggregate",
      "tags" : [ ],
      "settings" : {
        "scanInterval" : {
          "units" : "Seconds",
          "duration" : 1
        },
        "storageInterval" : {
          "units" : "Minutes",
          "duration" : 10
        },
        "window" : {
          "type" : "sliding",
          "windowInterval" : {
            "units" : "Minutes",
            "duration" : 1
          }
        },
        "enabled" : false,
        "inReferences" : [ "{{Connection.MQTT_UNS.$input({\"includeTopic\":false,\"payloadType\":\"any\",\"topic\":\"topic/test/2/test\"})}}", "{{Connection.MQTT_UNS.$input({\"includeTopic\":false,\"payloadType\":\"any\",\"topic\":\"topic/test/2/2\"})}}" ]
      }
    }, {
      "name" : "TestAlarmCondition",
      "uri" : "condition.alarm",
      "tags" : [ ],
      "settings" : {
        "alarmType" : "Time",
        "intervalBeforeAlarm" : {
          "units" : "Seconds",
          "duration" : 10
        },
        "inReferences" : [ "{{Connection.MQTT_UNS.$input({\"includeTopic\":false,\"payloadType\":\"any\",\"topic\":\"topic/test/2/test\"})}}" ]
      }
    }, {
      "name" : "TestDeadbandCondition",
      "uri" : "condition.deadband",
      "tags" : [ ],
      "settings" : {
        "absoluteDeadband" : 1,
        "inReferences" : [ "{{Connection.MQTT_UNS.$input({\"includeTopic\":false,\"payloadType\":\"any\",\"topic\":\"topic/test/2/test\"})}}" ]
      }
    } ],
    "inputs" : [ {
      "name" : "test",
      "connection" : "AspenTech",
      "type" : "ip21",
      "qualifier" : {
        "type" : "query",
        "command" : "SELECT * FROM HISTORY WHERE name='QATestRecord' and request = 4 and TS >= '13-JAN-25' "
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Static",
        "params" : [ {
          "name" : "test",
          "pattern" : "123,321"
        } ]
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Test",
      "connection" : "AzureEventHubs",
      "type" : "azure.eventhub",
      "qualifier" : {
        "includeMetaData" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Test",
      "connection" : "AzureIoTEdge",
      "type" : "azure.iotedge",
      "qualifier" : {
        "sink" : "myinput"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Test",
      "connection" : "AzureIoTHub",
      "type" : "azure.iothub",
      "qualifier" : { },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "CommaFile",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "CSV_Pipe_Comma.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "CommaFile_CTRL",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "CSV_Pipe_Comma_CTRL.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "QuotedFile",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "CSV_Pipe_Quote.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "\"",
        "quote" : "",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "QuotedFile_CTRL",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "CSV_Pipe_Quote_CTRL.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "\"",
        "quote" : "",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_allquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_allquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_colquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_colquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_extraheader_1st",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes_extraheader_1st.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_extraheader_end",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes_extraheader_end.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_indexed",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "maxRowsPerRead" : 1,
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_maxrows",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "maxRows" : 5,
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_maxrows_perread",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "maxRowsPerRead" : 2,
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_missingheader_1st",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes_missingheader_1st.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_missingheader_end",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes_missingheader_end.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_missingheader_mid",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes_missingheader_mid.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_noquotes_nounderscore_replace_headers",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_noquotes_nounderscore.csv",
        "indexFile" : false,
        "delimiter" : ",",
        "skipLines" : 0,
        "headers" : "1,2,3,4,5,6,7,8,9,10,11,12,13,14",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_comma_stringquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_comma_stringquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_pipe_allquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_pipe_allquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "|",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_pipe_colquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_pipe_colquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "|",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_pipe_noquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_pipe_noquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "|",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_pipe_stringquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_pipe_stringquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "|",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_quote_allquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_quote_allquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "\"",
        "quote" : "",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_quote_colquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_quote_colquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "\"",
        "quote" : "",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_quote_noquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_quote_noquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "\"",
        "quote" : "",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "alltypes_quote_stringquotes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "alltypes_quote_stringquotes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : "\"",
        "quote" : "",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "custom_escapechar_alltypes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "custom_escapechar_alltypes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "&"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "custom_singlequotes_alltypes",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "custom_singlequotes_alltypes.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "'",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "PipelinesFormatTest",
      "connection" : "CSVPipelines",
      "type" : "file.csv",
      "qualifier" : {
        "csvFileName" : "ComplexDataW2DArray.csv",
        "skipLines" : 0,
        "indexFile" : false,
        "delimiter" : ",",
        "quote" : "\"",
        "escape" : "\\"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "CSV_Pipe_Comma_CTRL",
      "connection" : "FilePipelines",
      "type" : "file",
      "qualifier" : {
        "fileName" : "CSV_Pipe_Comma_CTRL.csv",
        "indexFile" : false,
        "includeMetadata" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "countIn",
      "connection" : "MQTT",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "topic" : "count",
        "inputType" : "LastPublish",
        "payloadType" : "json"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_100_65280",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_101_neg_1",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : true,
        "startAddress" : "400101"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_102_0",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400102"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_201_IllegalFunction_1",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400201"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_202_IllegalDataAddress_2",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400202"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_203_IllegalDataValue_3",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400203"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_204_SlaveDeviceFailure_4",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400204"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_205_AcknoledgeSlave_5",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400205"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_206_SlaveDeviceBusy_6",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400206"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_207_NegativeAcknoldege_7",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400207"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_208_MemoryParityError_8",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400208"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_210_GatewayPathUnavailable_10",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400210"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_211_GatewayTargetDeviceFailedToRespond_11",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "400211"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_300_uptime",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "treatAsSigned" : false,
        "startAddress" : "400300",
        "count" : 2
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_400_unix_time",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "treatAsSigned" : false,
        "startAddress" : "400400",
        "count" : 2
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "HoldingRegister_4_500_math_pi",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "treatAsSigned" : false,
        "startAddress" : "400400",
        "count" : 2
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_3_100_65280",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_100_65280",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_101_neg_1",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : true,
        "startAddress" : "300101"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_102_0",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300102"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_201_IllegalFunction_1",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300201"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_202_IllegalDataAddress_2",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300202"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_203_IllegalDataValue_3",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300203"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_204_SlaveDeviceFailure_4",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300204"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_205_AcknoledgeSlave_5",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300205"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_206_SlaveDeviceBusy_6",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300206"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_207_NegativeAcknoldege_7",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300207"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_208_MemoryParityError_8",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300208"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_210_GatewayPathUnavailable_10",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300210"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_211_GatewayTargetDeviceFailedToRespond_11",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "count" : 1,
        "treatAsSigned" : false,
        "startAddress" : "300211"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_300_uptime",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "treatAsSigned" : false,
        "startAddress" : "300300",
        "count" : 2
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_400_unix_time",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "treatAsSigned" : false,
        "startAddress" : "300400",
        "count" : 2
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InputRegister_4_500_math_pi",
      "connection" : "Modbus",
      "type" : "modbus.tcp",
      "qualifier" : {
        "treatAsSigned" : false,
        "startAddress" : "300400",
        "count" : 2
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "CurrentMachineSpeed",
      "connection" : "PackingMachine_spb",
      "type" : "sparkplug",
      "qualifier" : {
        "groupId" : "SPB_Site",
        "edgeNodeId" : "Area",
        "deviceId" : "Line",
        "metricName" : "Status/CurMachSpeed"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Parquet_Pipe",
      "connection" : "ParquetPipelines",
      "type" : "file.parquet",
      "qualifier" : {
        "parquetFileName" : "Parquet_Pipe.parquet",
        "indexFile" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Parquet_Pipe_CTRL",
      "connection" : "ParquetPipelines",
      "type" : "file.parquet",
      "qualifier" : {
        "parquetFileName" : "Parquet_Pipe_CTRL.parquet",
        "indexFile" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "PipelinesFormatTest",
      "connection" : "ParquetPipelines",
      "type" : "file.parquet",
      "qualifier" : {
        "parquetFileName" : "ComplexDataW2DArray.parquet",
        "indexFile" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "test",
      "connection" : "ParquetPipelines",
      "type" : "file.parquet",
      "qualifier" : {
        "parquetFileName" : "test.parquet",
        "indexFile" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ALLTYPES_INDEX",
      "connection" : "QA_AMAZON_REDSHIFT",
      "type" : "jdbc.amazonredshift",
      "qualifier" : {
        "query" : "SELECT * FROM \"public\".\"alltypes\" where _id > {{index}} order by _id limit 1",
        "index" : {
          "enabled" : true,
          "indexName" : "_id",
          "indexValue" : "0"
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexWArray",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ComplexWArray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "DecodeTest",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "Format/JSON"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "DynamicInput_Postgres_Column1",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "dynamicinput/postgres/column1"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "DynamicInput_Postgres_Column2",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "dynamicinput/postgres/column2"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "DynamicInput_Postgres_Table",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "dynamicinput/postgres/table"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "DynamicInput_Postgres_WhereClause",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "dynamicinput/postgres/whereclauseString"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "LoopStart",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "Loop/Start"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Pipelines_Branch",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "pipelines/branch"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Ramp",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "pipelines/branch"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "escaped_character_json",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "escaped_character_json"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "escaped_character_str",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "escaped_character_str"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "int100",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "int100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "int100_w_topic",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : true,
        "payloadType" : "json",
        "topic" : "int100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "intArrayJSON",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "intArray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "intArrayUTF8",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "intArray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "intNegative100",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "intNegative100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ramp10",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp10"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ramp10JSON",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp10JSON"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampInt10",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/int/10"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampInt100",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/int/100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONDouble1",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/double/1"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONDouble100",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/double/100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONDouble5",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/double/5"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONInt100",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/int/100"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONInt5",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/int/5"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONIntArray5",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/intarray/5"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONString5",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/string/5"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "rampJSONboolean",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "ramp/json/boolean"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "stringArrayUTF8",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "stringArray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "test",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "General"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "utf8String",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "utf8",
        "topic" : "utf8String"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "variableJSON",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "topic/variableJSON"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "BASICTYPES",
      "connection" : "QA_MSSQLSERVER",
      "type" : "jdbc.sqlserver",
      "qualifier" : {
        "type" : "query",
        "query" : "SELECT * FROM [dbo].[basic_types]"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "DynamicQueryInput",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT \"name\",\"booleanType\",\"{{Connection.QA_MQTT_HIVEMQ.DynamicInput_Postgres_Column1}}\",\"int16Type\",\"uint16Type\", \"{{Connection.QA_MQTT_HIVEMQ.DynamicInput_Postgres_Column2}}\" FROM public.alltypes WHERE name = '{{Connection.QA_MQTT_HIVEMQ.DynamicInput_Postgres_WhereClause}}' and \"uint16Type\" ={{Instance.SQLTypesDefaults.uint16Type}}\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "EveryOtherNull",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='EveryOtherNull';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "IndexEnabled",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : true,
          "indexName" : "_id",
          "indexValue" : "1"
        },
        "query" : "SELECT * FROM public.alltypes WHERE _id > {{index}} limit 1",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullBool",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT * FROM public.alltypes WHERE name = 'NullBool';",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullDate",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullDate';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullInt16",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullInt16';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullInt32",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullInt32';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullInt64",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullInt64';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullReal32",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullReal32';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullReal64",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullReal64';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullString",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT \"_id\", \"name\", \"_model\", \"_timestamp\", \"booleanType\", \"stringType\", \"int16Type\", \"int32Type\", \"int64Type\", \"uint16Type\", \"uint32Type\", \"real32Type\", \"real64Type\", \"dateType\"\nFROM public.alltypes\nWHERE \"_id\"=4;\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullUInt16",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullUInt16';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NullUInt32",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\nWHERE \"name\"='NullUInt32';\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "SQLTypesDefaults1",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT * FROM public.alltypes WHERE name = 'SQLTypesDefaults1';",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "SQLTypesDefaults2",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT * FROM public.alltypes WHERE name = 'SQLTypesDefaults2';",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Select1AllTypes",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes limit 1\n\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "SelectAllTypes",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT *\nFROM public.alltypes\n\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "SelectAllTypes_3Rows",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT * FROM public.alltypes limit 3\n\n",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "timestamp",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "index" : {
          "enabled" : false
        },
        "query" : "SELECT now() as timestamp;",
        "type" : "query"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexData",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/complexData"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexDataDoubleNested",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/complexDataDoubleNested"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexDataNested",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/complexDataNested"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexDataNestedWArray",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/complexDataNestedWArray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexDataTripleNested",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/complexDataTripleNested"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexDataW2DArray",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/complexDataW2DArray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexDataWArray",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/complexDataWArray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "array_complexdata",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/array_complexdata",
        "includeMetadata" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "array_int",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/arrayint"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "array_int_repeated_values",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/arrayint_repeated_values",
        "includeMetadata" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "array_string",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/arraystring"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "array_string_empty_string",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/arraystring_emptystring",
        "includeMetadata" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "dependency_depth",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/doublenumber",
        "header" : [ {
          "name" : "my-number",
          "value" : "{{Connection.SpringApp.dependency_depth}}"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "echo",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/echo"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "employees_get",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/employees"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "employees_get_xml",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/xml",
        "method" : "GET",
        "endpointURL" : "/employeesxml"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "employees_post",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "POST",
        "endpointURL" : "/employees",
        "body" : "{\"city\":\"Bortland\",\"name\":\"Bolan Bormier\",\"phone\":\"222-222-2222\",\"id\":2}"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "employees_post_xml",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/xml",
        "method" : "POST",
        "endpointURL" : "/employeesxml",
        "body" : "<item>\n<city>Cortland</city>\n<name>Colan Cormier</name>\n<phone>333-333-3333</phone>\n<id>3</id>\n</item>"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "header_comma_separated",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/comma_separated_headers",
        "includeMetadata" : true
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "header_number",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/doublenumber",
        "header" : [ {
          "name" : "my-number",
          "value" : "4"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "header_number_dynamic",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/doublenumber",
        "header" : [ {
          "name" : "my-number",
          "value" : "{{Connection.SpringApp.header_number}}"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "header_string",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/doublestring",
        "header" : [ {
          "name" : "my-string",
          "value" : "one"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_boolfalse",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/boolfalse"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_booltrue",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/booltrue"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_datetime",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/datetime"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_datetime_now",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/datetimenow"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_double",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/double"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_doublemax",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/doublemax"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_doublemaxnegative",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/doublemaxnegative"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_float",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/float"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_float_max",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/floatmax"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_float_maxnegative",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/floatmaxnegative"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_int",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/intone"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_long",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/long"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_long_max",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/longmax"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_long_min",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/longmin"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_long_small",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/longsmall"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_short",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/short"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_short_max",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/shortmax"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_short_min",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/shortmin"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "queue",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/queue"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twoDArrayIntThree",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/2darrayintthree"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twoDarrayIntUneven",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/xml",
        "method" : "GET",
        "includeMetadata" : false,
        "endpointURL" : "/2darrayintuneven"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_boolean",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darrayboolean"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_datetime",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darraydatetime"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_double",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darraydouble"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_float",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darrayfloat"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_int",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darrayint"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_long",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darraylong"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_long_bigsmall",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darraylongbigsmall"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_string",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "contentType" : "application/json",
        "method" : "GET",
        "endpointURL" : "/2darraystring"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Branch_1",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "pipelines/branch/1"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Branch_2",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "pipelines/branch/2"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Branch_3",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "pipelines/branch/3"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "BufferSized10Double",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "buffer/sized/10/double"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "BufferSized2x3CWA",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "buffer/sized/2x3/cwa"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "CSVIndex",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "csv/index"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Flatten_ComplexWArray",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "includeTopic" : false,
        "payloadType" : "json",
        "topic" : "pipelines/flatten/complexwitharray"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexObject",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "Machine.AssetInfo.ID",
          "value" : "789"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "ComplexObjectWArray",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "Machine.AssetInfo.ID",
          "value" : "000"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "NoFilter",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_boolfalse",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "false"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_booltrue",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "true"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_datetime",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "2032-12-25T12:00:00"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_double",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "123.4567890123"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_doublemax",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "0.123456789012345"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_doublemaxnegative",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "-0.123456789012345"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_float",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "123.456"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_float_max",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "0.123456"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_float_maxnegative",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "-0.123456"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_int",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "1"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_long",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "123456789000001"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_long_max",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "999999999999999"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "primitive_long_min",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "-9223372036854776"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_boolean",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[true,false],[false,true]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_datetime",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[\"1989-08-24T15:34:00\",\"2000-01-01T00:00:00\"],[\"2032-12-25T12:00:00\",\"2022-05-05T05:05:00\"]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_double",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[1.234,-1.2],[123.2,321.5]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_float",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[1.123456,0.0],[123.12346,-321.12344]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_int",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[2147483647,123],[-2147483648,222]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_long",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[999999099999999,-999912345678999],[999999399999999,-999996999999999]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_long_bigsmall",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[999999099999999,-999912345678999],[9001,-8080]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "twodarray_string",
      "connection" : "Webhook",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "value",
          "value" : "[[\"123\",\"123\"],[\"111\",\"222\"]]"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "CSVIndexFlow",
      "connection" : "Webhook_FlowTriggers",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "filter",
          "value" : "CSVIndexFlow"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "PipelineFlow",
      "connection" : "Webhook_FlowTriggers",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "filter",
          "value" : "PipelineFlow"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "PostgresFlow",
      "connection" : "Webhook_FlowTriggers",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false,
        "filter" : [ {
          "name" : "filter",
          "value" : "PostgresFlow"
        } ]
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    } ],
    "outputs" : [ {
      "name" : "Test",
      "connection" : "AzureBlobStorage",
      "type" : "azure.blob",
      "qualifier" : {
        "utcTimePathPrefix" : true,
        "breakupArrays" : true,
        "blobName" : "TestBlob{{this.anycol}}",
        "containerName" : "qacontainer"
      }
    }, {
      "name" : "TestOut",
      "connection" : "AzureEventHubs",
      "type" : "azure.eventhub",
      "qualifier" : {
        "breakupArrays" : false
      }
    }, {
      "name" : "Test",
      "connection" : "AzureIoTEdge",
      "type" : "azure.iotedge",
      "qualifier" : {
        "breakupArrays" : false,
        "source" : "test"
      }
    }, {
      "name" : "Test",
      "connection" : "AzureIoTHub",
      "type" : "azure.iothub",
      "qualifier" : {
        "breakupArrays" : true,
        "modelComponent" : "",
        "template" : "${value.test}"
      }
    }, {
      "name" : "Pipe_Comma_CTRL",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "create" : true,
        "breakupArrays" : false,
        "fileName" : "CSV_Pipe_Comma_CTRL.csv",
        "delimiter" : ","
      }
    }, {
      "name" : "Pipe_Pipe_CTRL",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "create" : true,
        "breakupArrays" : false,
        "fileName" : "CSV_Pipe_Pipe_CTRL.csv",
        "delimiter" : "|"
      }
    }, {
      "name" : "Pipe_Quote_CTRL",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "create" : true,
        "breakupArrays" : false,
        "fileName" : "CSV_Pipe_Quote_CTRL.csv",
        "delimiter" : "\""
      }
    }, {
      "name" : "Pipe_Space_CTRL",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "create" : true,
        "breakupArrays" : false,
        "fileName" : "CSV_Pipe_Space_CTRL.csv",
        "delimiter" : " "
      }
    }, {
      "name" : "mqtt",
      "connection" : "CSV",
      "type" : "file.csv",
      "qualifier" : {
        "create" : true,
        "breakupArrays" : false,
        "fileName" : "mqtt.csv",
        "delimiter" : ""
      }
    }, {
      "name" : "CSVBase64",
      "connection" : "FilePipelines",
      "type" : "file",
      "qualifier" : {
        "base64Decoding" : true,
        "breakupArrays" : false,
        "fileName" : "Base64File.csv"
      }
    }, {
      "name" : "JSON_Pipe_SQL_CTRL",
      "connection" : "FilePipelines",
      "type" : "file",
      "qualifier" : {
        "base64Decoding" : false,
        "breakupArrays" : false,
        "fileName" : "JSON_Pipe_SQL_CTRL.json"
      }
    }, {
      "name" : "JSON_Pipe_SQL_CTRL_Decode",
      "connection" : "FilePipelines",
      "type" : "file",
      "qualifier" : {
        "base64Decoding" : true,
        "breakupArrays" : false,
        "fileName" : "JSON_Pipe_SQL_CTRL_Decode.json"
      }
    }, {
      "name" : "highbyte_modbus",
      "connection" : "InfluxDB",
      "type" : "influxdb",
      "qualifier" : {
        "bucket" : "highbyte",
        "measurement" : "modbus"
      }
    }, {
      "name" : "highbyte_opcua",
      "connection" : "InfluxDB",
      "type" : "influxdb",
      "qualifier" : {
        "bucket" : "highbyte",
        "measurement" : "opcua",
        "breakupArrays" : false
      }
    }, {
      "name" : "testOut",
      "connection" : "MQTT",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "breakupArrays" : false,
        "topic" : "comm_recovery",
        "retained" : false
      }
    }, {
      "name" : "ParquetCTRL",
      "connection" : "ParquetPipelines",
      "type" : "file.parquet",
      "qualifier" : {
        "breakupArrays" : false,
        "baseFileName" : "Parquet_Pipe_CTRL.parquet"
      }
    }, {
      "name" : "ALLTYPES",
      "connection" : "QA_AMAZON_REDSHIFT",
      "type" : "jdbc.amazonredshift",
      "qualifier" : {
        "writeType" : "insert",
        "createOption" : "create",
        "tableCacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        },
        "breakupArrays" : false,
        "table" : "alltypes42",
        "whereColumn" : "",
        "logAsJSON" : false
      }
    }, {
      "name" : "BreakupArrays",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : true,
        "topic" : "Breakup/Array/Output"
      }
    }, {
      "name" : "ComplexWArray",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "ComplexWArray",
        "filterList" : [ "_name", "_model", "_timestamp" ],
        "filterList-newItem" : ""
      }
    }, {
      "name" : "FlattenComplexWArray",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "Flatten/ComplexWArray",
        "filterList" : [ "_name", "_model", "_timestamp" ],
        "filterList-newItem" : ""
      }
    }, {
      "name" : "LoopStart",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "Loop/Start",
        "filterList" : [ "_name", "_model", "_timestamp" ],
        "filterList-newItem" : ""
      }
    }, {
      "name" : "Pipeline_Format_JSON_CTRL",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "Format/JSON/CTRL"
      }
    }, {
      "name" : "Test",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "General"
      }
    }, {
      "name" : "Test1",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "test"
      }
    }, {
      "name" : "Test2",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "General2"
      }
    }, {
      "name" : "Test3",
      "connection" : "QA_MQTT_HIVEMQ",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "General3"
      }
    }, {
      "name" : "AllTypes",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "writeType" : "insert",
        "logAsJSON" : false,
        "breakupArrays" : false,
        "table" : "alltypes42",
        "createOption" : "create",
        "whereColumn" : "",
        "tableCacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        }
      }
    }, {
      "name" : "httpbin_uuid",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "writeType" : "insert",
        "logAsJSON" : false,
        "breakupArrays" : false,
        "table" : "uuid",
        "createOption" : "create"
      }
    }, {
      "name" : "opcua_test",
      "connection" : "QA_POSTGRES",
      "type" : "jdbc.postgresql",
      "qualifier" : {
        "writeType" : "insert",
        "logAsJSON" : false,
        "breakupArrays" : false,
        "table" : "opcua_test",
        "createOption" : "create"
      }
    }, {
      "name" : "echo",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "method" : "POST",
        "bodyType" : "raw",
        "breakupArrays" : false,
        "endpointURL" : "/echo"
      }
    }, {
      "name" : "queue",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "method" : "POST",
        "bodyType" : "raw",
        "breakupArrays" : false,
        "endpointURL" : "/queue/push",
        "filterList" : [ "_timestamp", "_model", "_name" ],
        "filterList-newItem" : "",
        "header" : [ ]
      }
    }, {
      "name" : "test",
      "connection" : "SpringApp",
      "type" : "rest.client",
      "qualifier" : {
        "method" : "POST",
        "bodyType" : "raw",
        "breakupArrays" : false,
        "endpointURL" : "/test"
      }
    }, {
      "name" : "CSVIndex",
      "connection" : "TestResults",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "retained" : false,
        "breakupArrays" : false,
        "topic" : "csv/index"
      }
    } ],
    "modeling" : {
      "models" : [ {
        "name" : "AnyType",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "AnyType_2Values",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "State",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "String"
        }, {
          "attributeType" : "Internal",
          "name" : "Zip",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int32"
        } ]
      }, {
        "name" : "AnyType_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "array_value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "AnyType_Required",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : true,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "BooleanType",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "truevalue",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Boolean"
        }, {
          "attributeType" : "Internal",
          "name" : "falsevalue",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Boolean"
        } ]
      }, {
        "name" : "BooleanType_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "truevalue",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Boolean"
        }, {
          "attributeType" : "Internal",
          "name" : "falsevalue",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Boolean"
        } ]
      }, {
        "name" : "ComplexModel",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "Name",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "String"
        }, {
          "attributeType" : "Internal",
          "name" : "ID",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int32"
        }, {
          "attributeType" : "Internal",
          "name" : "Temp",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Real32"
        }, {
          "attributeType" : "Modeled",
          "name" : "Location",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "model" : "AnyType_2Values"
        }, {
          "attributeType" : "Internal",
          "name" : "Values",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Int64"
        }, {
          "attributeType" : "Internal",
          "name" : "BoolType",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Boolean"
        }, {
          "attributeType" : "Internal",
          "name" : "Any",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "DatetimeType",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "DateTime"
        } ]
      }, {
        "name" : "DatetimeType_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "DateTime"
        } ]
      }, {
        "name" : "FileType",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "File"
        } ]
      }, {
        "name" : "FileType_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "File"
        } ]
      }, {
        "name" : "Int16Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int16"
        } ]
      }, {
        "name" : "Int16Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Int16"
        } ]
      }, {
        "name" : "Int32Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int32"
        } ]
      }, {
        "name" : "Int32Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Int32"
        } ]
      }, {
        "name" : "Int64Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int64"
        } ]
      }, {
        "name" : "Int64Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Int64"
        } ]
      }, {
        "name" : "Int8Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int8"
        } ]
      }, {
        "name" : "Int8Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Int8"
        } ]
      }, {
        "name" : "REST",
        "groupAs" : "/Qualifiers",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "method",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "bodyType",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "header",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "endpointURL",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "Real32Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Real32"
        } ]
      }, {
        "name" : "Real32Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Real32"
        } ]
      }, {
        "name" : "Real64Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Real64"
        } ]
      }, {
        "name" : "Real64Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "Real64"
        } ]
      }, {
        "name" : "SQLTypes",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "booleanType",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Boolean"
        }, {
          "attributeType" : "Internal",
          "name" : "stringType",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "String"
        }, {
          "attributeType" : "Internal",
          "name" : "int8Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int8"
        }, {
          "attributeType" : "Internal",
          "name" : "int16Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int16"
        }, {
          "attributeType" : "Internal",
          "name" : "int32Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int32"
        }, {
          "attributeType" : "Internal",
          "name" : "int64Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Int64"
        }, {
          "attributeType" : "Internal",
          "name" : "uint8Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt8"
        }, {
          "attributeType" : "Internal",
          "name" : "uint16Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt16"
        }, {
          "attributeType" : "Internal",
          "name" : "uint32Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt32"
        }, {
          "attributeType" : "Internal",
          "name" : "uint64Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt64"
        }, {
          "attributeType" : "Internal",
          "name" : "real32Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Real32"
        }, {
          "attributeType" : "Internal",
          "name" : "real64Type",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Real64"
        }, {
          "attributeType" : "Internal",
          "name" : "dateType",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "DateTime"
        } ]
      }, {
        "name" : "StringType",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "String"
        } ]
      }, {
        "name" : "StringType_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "String"
        } ]
      }, {
        "name" : "UInt16Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt16"
        } ]
      }, {
        "name" : "UInt16Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "UInt16"
        } ]
      }, {
        "name" : "UInt32Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt32"
        } ]
      }, {
        "name" : "UInt32Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "UInt32"
        } ]
      }, {
        "name" : "UInt64Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt64"
        } ]
      }, {
        "name" : "UInt64Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "UInt64"
        } ]
      }, {
        "name" : "UInt8Type",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "UInt8"
        } ]
      }, {
        "name" : "UInt8Type_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : true,
          "internalType" : "UInt8"
        } ]
      }, {
        "name" : "u1750704589628",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "anycol",
          "nullable" : false,
          "required" : true,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "u1750704589630",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : true,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "u1750707802258",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "anycol",
          "nullable" : false,
          "required" : true,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "u1750707802260",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : true,
          "array" : false,
          "internalType" : "Any"
        } ]
      } ],
      "instances" : [ {
        "name" : "AnyTypeArrayDefault",
        "groupAs" : "/Array",
        "tags" : [ ],
        "model" : "AnyType_Array",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "array_value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{\"test\":{\"one\":\"val\"}}"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_2Values",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType_2Values",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "State",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "test"
        }, {
          "name" : "Zip",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "115 +2"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_2Values_ForTesting",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType_2Values",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "State",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "123"
        }, {
          "name" : "Zip",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "115 +2"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_Array",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType_Array",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "array_value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "AnyType_int",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_Array_2Values",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType_Array",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "array_value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Instance.AnyType_2Values}}\r\n"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_Nested",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "AnyType_int",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_boolean",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "true"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_double",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "0.123456789012345"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_float",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "123.456"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_int",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "1234567932 - 42"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_long",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "9223372036854776000"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "AnyType_string",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "\"this is a string\""
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "BasicMetadata",
        "groupAs" : "/Metadata",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "ihub.withMetadata.{{Connection.QA_MQTT_HIVEMQ.ComplexWArray}}"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "BooleanTypeDefault",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "BooleanType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "truevalue",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "true"
        }, {
          "name" : "falsevalue",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "false"
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexAddToQueue",
        "groupAs" : "/Complex",
        "tags" : [ ],
        "model" : "ComplexModel",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "Name",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "/addToQueue"
        }, {
          "name" : "ID",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "primitive_short",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        }, {
          "name" : "Temp",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "primitive_float",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        }, {
          "name" : "Location",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "ComplexAddToQueue_Location",
              "params" : { },
              "path" : ""
            }
          },
          "attributes" : [ {
            "name" : "State",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          }, {
            "name" : "Zip",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          } ]
        }, {
          "name" : "Values",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "array_int",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        }, {
          "name" : "BoolType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "primitive_booltrue",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        }, {
          "name" : "Any",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "ComplexData",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexAddToQueue_Location",
        "groupAs" : "/Complex",
        "tags" : [ ],
        "model" : "AnyType_2Values",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "State",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "maine"
        }, {
          "name" : "Zip",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "12345"
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexInstance",
        "groupAs" : "/Pipelines",
        "tags" : [ ],
        "model" : "ComplexModel",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "Name",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "TestMachine"
          }
        }, {
          "name" : "ID",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "64"
          }
        }, {
          "name" : "Temp",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "123.456"
          }
        }, {
          "name" : "Location",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "ComplexInstance_Location",
              "params" : { },
              "path" : ""
            }
          },
          "attributes" : [ {
            "name" : "State",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          }, {
            "name" : "Zip",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          } ]
        }, {
          "name" : "Values",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "array_int",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        }, {
          "name" : "BoolType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "Any",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexInstanceNoMetadata",
        "groupAs" : "/Metadata",
        "tags" : [ ],
        "model" : "ComplexModel",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "Name",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.Ramp}}.value"
          }
        }, {
          "name" : "ID",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.Ramp}}.value"
          }
        }, {
          "name" : "Temp",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.SpringApp.primitive_double}} + {{Connection.QA_MQTT_HIVEMQ.Ramp}}.value"
          }
        }, {
          "name" : "Location",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "MetadataLocation",
              "params" : { },
              "path" : ""
            }
          },
          "attributes" : [ {
            "name" : "State",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          }, {
            "name" : "Zip",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          } ]
        }, {
          "name" : "Values",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "array_int",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        }, {
          "name" : "BoolType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "Any",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexInstanceWMetadata",
        "groupAs" : "/Metadata",
        "tags" : [ ],
        "model" : "ComplexModel",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "Name",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.SpringApp.array_string}}[4]"
          }
        }, {
          "name" : "ID",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.Ramp}}.value"
          }
        }, {
          "name" : "Temp",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.SpringApp.primitive_double}} + {{Connection.QA_MQTT_HIVEMQ.Ramp}}.value"
          }
        }, {
          "name" : "Location",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "MetadataLocation",
              "params" : { },
              "path" : ""
            }
          },
          "attributes" : [ {
            "name" : "State",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          }, {
            "name" : "Zip",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          } ]
        }, {
          "name" : "Values",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "array_int",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        }, {
          "name" : "BoolType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "Any",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexInstance_Location",
        "groupAs" : "/Pipelines",
        "tags" : [ ],
        "model" : "AnyType_2Values",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "State",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "\"MA\""
          }
        }, {
          "name" : "Zip",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "12345"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexJSONWArray",
        "groupAs" : "/Pipelines",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "value = {\"Machine\":{\"AssetInfo\":{\"ID\":\"000\",\"SN\":\"B320-3R8:1N9-C\",\"Date\":\"2020/09/29\",\"Machine\": 0},\"Online\":true,\"Utilization\":0.2,\"ArrayType\":[1,2,3,4,5]}}\r\nvalue"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexRamp",
        "groupAs" : "/Complex",
        "tags" : [ ],
        "model" : "ComplexModel",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "Name",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONString5}}.value"
          }
        }, {
          "name" : "ID",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONInt5}}.value"
          }
        }, {
          "name" : "Temp",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONDouble5}}.value"
          }
        }, {
          "name" : "Location",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "AnyType_2Values",
              "params" : { },
              "path" : ""
            }
          },
          "attributes" : [ {
            "name" : "State",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          }, {
            "name" : "Zip",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          } ]
        }, {
          "name" : "Values",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONIntArray5}}.value"
          }
        }, {
          "name" : "BoolType",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONboolean}}.value"
          }
        }, {
          "name" : "Any",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "ComplexRamp_100",
        "groupAs" : "/Complex",
        "tags" : [ ],
        "model" : "ComplexModel",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "Name",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONString5}}.value"
          }
        }, {
          "name" : "ID",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONInt100}}.value"
          }
        }, {
          "name" : "Temp",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONDouble100}}.value"
          }
        }, {
          "name" : "Location",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Instance",
              "name" : "AnyType_2Values",
              "params" : { },
              "path" : ""
            }
          },
          "attributes" : [ {
            "name" : "State",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          }, {
            "name" : "Zip",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          } ]
        }, {
          "name" : "Values",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONIntArray5}}.value"
          }
        }, {
          "name" : "BoolType",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.rampJSONboolean}}.value"
          }
        }, {
          "name" : "Any",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "DatetimeTypeDefault",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "DatetimeType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "123456789"
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "Escaped_Characters",
        "groupAs" : "/Basic",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "\\t"
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "Expressions",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "externalLib();"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "Expressions_required",
        "tags" : [ ],
        "model" : "AnyType_Required",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "externalLib() + {{Connection.SpringApp.ComplexData}}.value.id"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "JSONComplexArray",
        "groupAs" : "/Pipelines",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "value = {\"Machine\":[{\"AssetInfo\":{\"ID\":\"0\",\"SN\":\"B320-3R8:1N9-C\",\"Date\":\"2020/09/29\",\"Machine\": 0},\"Online\":true,\"Utilization\":0.2,\"ArrayType\":[1,2,3,4,5]},\r\n{\"AssetInfo\":{\"ID\":\"1\",\"SN\":\"B320-3R8:1N9-C\",\"Date\":\"2020/09/29\",\"Machine\": 0},\"Online\":true,\"Utilization\":0.2,\"ArrayType\":[6,7,8,9,0]},{\"AssetInfo\":{\"ID\":\"2\",\"SN\":\"B320-3R8:1N9-C\",\"Date\":\"2021/09/29\",\"Machine\": 0},\"Online\":true,\"Utilization\":0.2,\"ArrayType\":[\"one\",\"two\",\"three\"]}]}\r\nvalue"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "MetadataLocation",
        "groupAs" : "/Metadata",
        "tags" : [ ],
        "model" : "AnyType_2Values",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "State",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.QA_MQTT_HIVEMQ.ComplexWArray}}.Machine.AssetInfo.SN + {{Connection.QA_MQTT_HIVEMQ.Ramp}}.value"
          }
        }, {
          "name" : "Zip",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "{{Connection.SpringApp.primitive_int}} + {{Connection.SpringApp.primitive_short}}"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "MetadataTest",
        "groupAs" : "/Metadata",
        "tags" : [ ],
        "model" : "SQLTypes",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "booleanType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "stringType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "int8Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "int16Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "int32Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "int64Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "uint8Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "uint16Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "uint32Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "uint64Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "real32Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "real64Type",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "dateType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "NoData",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "RESTAddToQueue_ComplexData",
        "groupAs" : "/Qualifiers",
        "tags" : [ ],
        "model" : "REST",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "method",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "bodyType",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "header",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          }
        }, {
          "name" : "endpointURL",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "path" : ""
            }
          },
          "defaultValue" : "/addToQueue"
        }, {
          "name" : "value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "ComplexData",
              "params" : { },
              "path" : "",
              "connectionName" : "SpringApp"
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "SQLTypesDefaults",
        "tags" : [ ],
        "model" : "SQLTypes",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V4",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "booleanType",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return false"
          }
        }, {
          "name" : "stringType",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return \"this is a string 12345\""
          }
        }, {
          "name" : "int8Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 1;"
          }
        }, {
          "name" : "int16Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 12345;"
          }
        }, {
          "name" : "int32Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 1234567890;"
          }
        }, {
          "name" : "int64Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 123456789012345;"
          }
        }, {
          "name" : "uint8Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 2;"
          }
        }, {
          "name" : "uint16Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 12345;"
          }
        }, {
          "name" : "uint32Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 1234567890;"
          }
        }, {
          "name" : "uint64Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 123456789012345;"
          }
        }, {
          "name" : "real32Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 123.45678;"
          }
        }, {
          "name" : "real64Type",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return 12.3456789012345;"
          }
        }, {
          "name" : "dateType",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return new Date(1234567890000)"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "WebhookBasic",
        "groupAs" : "/Webhook",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "Test",
              "params" : { },
              "path" : "",
              "connectionName" : "Webhook"
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "WebhookTest",
        "groupAs" : "/Webhook",
        "tags" : [ ],
        "model" : "AnyType",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V3Legacy",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "NoFilter",
              "params" : { },
              "path" : "",
              "connectionName" : "Webhook"
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "count_instance",
        "tags" : [ ],
        "model" : "u1750704589628",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V4",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "anycol",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return {{Connection.MQTT.countIn}}"
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "template_instance",
        "tags" : [ ],
        "model" : "u1750704589630",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Static",
          "params" : [ {
            "name" : "param",
            "pattern" : "test"
          } ]
        },
        "executeMode" : "V4",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "value",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "return \"{{this.param}}\""
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      } ]
    },
    "pipelines" : [ {
      "name" : "AMAZON_REDSHIFT_INDEX_FLOW_TRIGGER",
      "groupAs" : "/AmazonRedshift",
      "tags" : [ ],
      "inputStages" : [ "WriteNew" ],
      "stages" : [ {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 248,
            "y" : -2
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_LOCALHOST}}",
          "qualifier" : {
            "topic" : "AMAZON_REDSHIFT_INDEX",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -471,
            "y" : -1
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_AMAZON_REDSHIFT.ALLTYPES_INDEX}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "AMAZON_REDSHIFT_INDEX_MERGE_READSTAGE",
      "groupAs" : "/AmazonRedshift",
      "tags" : [ ],
      "inputStages" : [ "MergeRead" ],
      "stages" : [ {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_LOCALHOST}}",
          "qualifier" : {
            "topic" : "AMAZON_REDSHIFT_INDEX",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "MergeRead",
        "display" : {
          "position" : {
            "x" : 212,
            "y" : 1
          }
        },
        "config" : {
          "type" : ".MergeReadConfig",
          "failureOutputs" : [ ],
          "keyReferences" : [ {
            "location" : "child",
            "key" : "Source1",
            "reference" : {
              "type" : "Input",
              "name" : "ALLTYPES_INDEX",
              "params" : { },
              "path" : "",
              "connectionName" : "QA_AMAZON_REDSHIFT"
            }
          } ],
          "inputValueLocation" : "inline",
          "inputValueKey" : "eventIn"
        },
        "outputs" : [ "WriteNew" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 1,
            "units" : "Seconds"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "AMAZON_REDSHIFT_INDEX_READSTAGE",
      "groupAs" : "/AmazonRedshift",
      "tags" : [ ],
      "inputStages" : [ "Read" ],
      "stages" : [ {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_LOCALHOST}}",
          "qualifier" : {
            "topic" : "AMAZON_REDSHIFT_INDEX",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Read",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "ALLTYPES_INDEX",
            "params" : { },
            "path" : "",
            "connectionName" : "QA_AMAZON_REDSHIFT"
          }
        },
        "outputs" : [ "WriteNew" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 1,
            "units" : "Seconds"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "AzureBlobFileOut",
      "groupAs" : "/AzureBlob",
      "tags" : [ ],
      "inputStages" : [ "CSVFormat" ],
      "stages" : [ {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.AzureBlobStorage}}",
          "qualifier" : {
            "containerName" : "qacontainer",
            "utcTimePathPrefix" : false,
            "breakupArrays" : false,
            "blobName" : "myFileOut.csv"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "CSVFormat",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : ","
        },
        "outputs" : [ "WriteNew" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Minutes"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_MSSQLSERVER.BASICTYPES}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "AzureBlobOutput",
      "groupAs" : "/AzureBlob",
      "tags" : [ ],
      "inputStages" : [ "Write" ],
      "stages" : [ {
        "name" : "Write",
        "display" : {
          "position" : {
            "x" : 252,
            "y" : -108
          }
        },
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.AzureBlobStorage.Test}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -576,
            "y" : -19
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Exception",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "OnChange",
            "expression" : "{{Connection.MQTT.countIn}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.count_instance}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "AzureIoTHubEvent",
      "groupAs" : "/AzureIotHub",
      "tags" : [ ],
      "inputStages" : [ "WriteNew" ],
      "stages" : [ {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 270,
            "y" : 43
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_LOCALHOST}}",
          "qualifier" : {
            "topic" : "azuretest",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "EventTrigger",
        "display" : {
          "position" : {
            "x" : -468,
            "y" : -90
          }
        },
        "config" : {
          "type" : ".TriggerEvent",
          "enabled" : false,
          "reference" : "{{Connection.AzureIoTHub.Test}}"
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "AzureIoTHubOutput",
      "groupAs" : "/AzureIotHub",
      "tags" : [ ],
      "inputStages" : [ "WriteNew" ],
      "stages" : [ {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 311,
            "y" : -78
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.AzureIoTHub}}",
          "qualifier" : {
            "modelComponent" : "",
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -556,
            "y" : -64
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Exception",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "OnChange",
            "expression" : "{{Connection.MQTT.countIn}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.count_instance}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupAll",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "Write",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "StageType",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "all"
        },
        "outputs" : [ "Write" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "BreakupAllPipeline_Instance_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.ComplexJSONWArray}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "BreakupAllPipeline_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 10,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.Select1AllTypes}}", "{{Instance.ComplexInstance}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupAll5x",
      "tags" : [ ],
      "inputStages" : [ "Breakup" ],
      "stages" : [ {
        "name" : "Write",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Breakup",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "all"
        },
        "outputs" : [ "Breakup_1" ]
      }, {
        "name" : "Breakup_1",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "all"
        },
        "outputs" : [ "Breakup_2" ]
      }, {
        "name" : "Breakup_2",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "all"
        },
        "outputs" : [ "Breakup_3" ]
      }, {
        "name" : "Breakup_3",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "all"
        },
        "outputs" : [ "Breakup_4" ]
      }, {
        "name" : "Breakup_4",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Write" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupAllBreakupAll",
      "tags" : [ ],
      "inputStages" : [ "Breakup" ],
      "stages" : [ {
        "name" : "Breakup",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "all"
        },
        "outputs" : [ "Write_1", "Breakup_1" ]
      }, {
        "name" : "Breakup_1",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "all"
        },
        "outputs" : [ "Write" ]
      }, {
        "name" : "Write",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Write_1",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupAll_2Times",
      "tags" : [ ],
      "inputStages" : [ "Transform" ],
      "stages" : [ {
        "name" : "Transform",
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "WriteTargets", "Transform_1" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform_1",
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "WriteTargets_1", "Transform_2" ]
      }, {
        "name" : "WriteTargets_1",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform_2",
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "WriteTargets_2" ]
      }, {
        "name" : "WriteTargets_2",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupArray",
      "tags" : [ ],
      "inputStages" : [ "BreakupArray" ],
      "stages" : [ {
        "name" : "BreakupArray",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Write" ]
      }, {
        "name" : "Write",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "BreakupArrayPipeline_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.SelectAllTypes}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "BreakupArrayPipeline_NoBreak_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.JSONComplexArray}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupArrayBreakupObject",
      "tags" : [ ],
      "inputStages" : [ "Breakup" ],
      "stages" : [ {
        "name" : "Breakup",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Write_1", "Breakup_1" ]
      }, {
        "name" : "Breakup_1",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "object"
        },
        "outputs" : [ "Write" ]
      }, {
        "name" : "Write",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Write_1",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupArrayInts",
      "tags" : [ ],
      "inputStages" : [ "input" ],
      "stages" : [ {
        "name" : "output",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "Breakup/Array/Ints/Output"
          },
          "qualifierExpression" : "dfg dfhert yhe",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "breakuparray",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "output" ]
      }, {
        "name" : "input",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "Breakup/Array/Ints/Input"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ "breakuparray" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "BreakupArrayInts_2Darray_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.twodarray_int}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "BreakupArrayInts_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.array_int}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "BreakupArrayInts_RepeatedValues_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.array_int_repeated_values}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupArrayTimedBuffer",
      "tags" : [ ],
      "inputStages" : [ "Breakup_1" ],
      "stages" : [ {
        "name" : "Breakup_1",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "TimedBuffer" ]
      }, {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 10,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupBuffer",
      "tags" : [ ],
      "inputStages" : [ "Breakup" ],
      "stages" : [ {
        "name" : "Breakup",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Breakup_1" ]
      }, {
        "name" : "Breakup_1",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "object"
        },
        "outputs" : [ "TimedBuffer" ]
      }, {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 10,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupObject",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "StageType",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "object"
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "BreakupObjectPipeline_NoBreak_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.SelectAllTypes}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "BreakupObjectPipeline_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.JSONComplexArray}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupObjectInts",
      "tags" : [ ],
      "inputStages" : [ "input" ],
      "stages" : [ {
        "name" : "output",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "Breakup/Object/Ints/Output"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "breakupobject",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "object"
        },
        "outputs" : [ "output" ]
      }, {
        "name" : "input",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "Breakup/Object/Ints/Input"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ "breakupobject" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "BreakupObjectInts_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.array_int}}", "{{Connection.SpringApp.twodarray_string}}", "{{Instance.ComplexInstance}}", "{{Connection.SpringApp.primitive_double}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BreakupObjectTimedBuffer",
      "tags" : [ ],
      "inputStages" : [ "Breakup_1" ],
      "stages" : [ {
        "name" : "Breakup_1",
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "object"
        },
        "outputs" : [ "TimedBuffer" ]
      }, {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 10,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferSized10Double",
      "tags" : [ ],
      "inputStages" : [ "SizedBuffer10" ],
      "stages" : [ {
        "name" : "MQTT",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "buffer/sized/10/double"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "SizedBuffer10",
        "config" : {
          "type" : ".SizedBufferConfig",
          "windowExpression" : "let test = {tests: 1};\r\nstage.setBufferKey(String(test));",
          "windowSize" : 1,
          "timeout" : {
            "duration" : 0,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "MQTT" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "BufferSized10Double_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 10,
              "units" : "Milliseconds"
            },
            "mode" : "Always",
            "expression" : "{{Connection.Webhook_FlowTriggers.PipelineFlow}}.enabled",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.AnyType_double}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferSized2x3CWA",
      "tags" : [ ],
      "inputStages" : [ "SizedBuffer_2" ],
      "stages" : [ {
        "name" : "SizedBuffer_3",
        "config" : {
          "type" : ".SizedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowSize" : 3,
          "timeout" : {
            "duration" : 0,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "MQTT" ]
      }, {
        "name" : "MQTT",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "buffer/sized/2x3/cwa"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "SizedBuffer_2",
        "config" : {
          "type" : ".SizedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowSize" : 2,
          "timeout" : {
            "duration" : 0,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "SizedBuffer_3" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "Buffer2x3_CWA_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 10,
              "units" : "Milliseconds"
            },
            "mode" : "WhileTrue",
            "expression" : "{{Connection.Webhook_FlowTriggers.PipelineFlow}}.enabled",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.ComplexJSONWArray}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferSized3",
      "tags" : [ ],
      "inputStages" : [ "SizedBuffer3" ],
      "stages" : [ {
        "name" : "SizedBuffer3",
        "config" : {
          "type" : ".SizedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowSize" : 3,
          "timeout" : {
            "duration" : 0,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "Buffer3_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.ComplexRamp}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferSized5",
      "tags" : [ ],
      "inputStages" : [ "ToCSVFile" ],
      "stages" : [ {
        "name" : "ToCSVFile",
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : ","
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteNewTarget",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.File}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "Buffered.csv"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ "WriteNewTarget" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "Buffer10_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 500,
              "units" : "Milliseconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.ComplexRamp_100}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferSizedFunction",
      "tags" : [ ],
      "inputStages" : [ "SizedBuffer10" ],
      "stages" : [ {
        "name" : "MQTT",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "buffer/sized/function"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "SizedBuffer10",
        "config" : {
          "type" : ".SizedBufferConfig",
          "windowExpression" : "stage.setBufferKey(event.value);",
          "windowSize" : 3,
          "timeout" : {
            "duration" : 0,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "MQTT" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferTimed10Minutes",
      "tags" : [ ],
      "inputStages" : [ "TimedBuffer" ],
      "stages" : [ {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 10,
            "units" : "Minutes"
          }
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferTimed10Seconds",
      "tags" : [ ],
      "inputStages" : [ "TimedBuffer" ],
      "stages" : [ {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 10,
            "units" : "Seconds"
          }
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferTimed1Day",
      "tags" : [ ],
      "inputStages" : [ "TimedBuffer" ],
      "stages" : [ {
        "name" : "test",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.QA_MQTT_HIVEMQ.Test}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 1,
            "units" : "Days"
          }
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferTimed1Hour",
      "tags" : [ ],
      "inputStages" : [ "TimedBuffer" ],
      "stages" : [ {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 1,
            "units" : "Hours"
          }
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "Test_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 10,
              "units" : "Minutes"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.ComplexData}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BufferTimed1Millisecond",
      "tags" : [ ],
      "inputStages" : [ "TimedBuffer" ],
      "stages" : [ {
        "name" : "MQTT",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "Buffer/Timed1Millisecond"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 10,
            "units" : "Milliseconds"
          }
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "BufferSized1Millisecond_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.AnyType_double}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "BuffersFormatFiles",
      "tags" : [ ],
      "inputStages" : [ "SizedBuffer" ],
      "stages" : [ {
        "name" : "SizedBuffer",
        "config" : {
          "type" : ".SizedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowSize" : 3,
          "timeout" : {
            "duration" : 0,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "TimedBuffer" ]
      }, {
        "name" : "TimedBuffer",
        "config" : {
          "type" : ".TimedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowInterval" : {
            "duration" : 10,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "ToCSVFile", "ToParquetFile", "ToJSONFile" ]
      }, {
        "name" : "ToCSVFile",
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : ","
        },
        "outputs" : [ "WriteNewTarget" ]
      }, {
        "name" : "ToJSONFile",
        "config" : {
          "type" : ".JSONFormatConfig",
          "outgoingType" : "File"
        },
        "outputs" : [ "WriteNewTarget_2" ]
      }, {
        "name" : "ToParquetFile",
        "config" : {
          "type" : ".ParquetFormatConfig",
          "outgoingType" : "File"
        },
        "outputs" : [ "WriteNewTarget_1" ]
      }, {
        "name" : "WriteNewTarget",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.File}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "test.csv"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "WriteNewTarget_1",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.File}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "test.parquet"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "WriteNewTarget_2",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.File}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "test.json"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "CSVIndex_flow",
      "groupAs" : "/CSV",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "CSVIndex",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Exception",
            "interval" : {
              "duration" : 10,
              "units" : "Milliseconds"
            },
            "mode" : "OnChange",
            "expression" : "{{Connection.Webhook_FlowTriggers.CSVIndexFlow}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.CSV.alltypes_comma_noquotes_indexed}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "ConditionTests",
      "groupAs" : "/Conditions",
      "tags" : [ ],
      "inputStages" : [ ],
      "stages" : [ ],
      "trackActivity" : false,
      "triggers" : [ ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "ConsoleLog",
      "tags" : [ ],
      "inputStages" : [ "ConsoleLog" ],
      "stages" : [ {
        "name" : "ConsoleLog",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "console.log(\"TESTING\");\r\nstage.setValue(event.value);\r\nlet i = 10;\r\ni;"
        },
        "outputs" : [ "Transform" ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : -135
          }
        },
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 135
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 10,
            "units" : "Seconds"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "CustomTest",
      "tags" : [ ],
      "inputStages" : [ "Custom" ],
      "stages" : [ {
        "name" : "Custom",
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "ttest" ]
      }, {
        "name" : "ttest",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "/ssss"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "Delay10Seconds",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "MQTT",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_MQTT_HIVEMQ}}",
          "qualifier" : {
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "topic" : "Delay/10"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "StageType",
        "config" : {
          "type" : ".DelayConfig",
          "delay" : {
            "duration" : 10,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "MQTT" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "DynamicWritePostgresPipelineTable",
      "tags" : [ ],
      "inputStages" : [ "PostgresPipelineTable" ],
      "stages" : [ {
        "name" : "PostgresPipelineTable",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.QA_POSTGRES}}",
          "qualifier" : {
            "writeType" : "insert",
            "logAsJSON" : false,
            "createTable" : true,
            "table" : "PipelineTable"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "ErrorHandler",
      "groupAs" : "/ErrorHandler",
      "tags" : [ ],
      "inputStages" : [ "Transform_1" ],
      "stages" : [ {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 536,
            "y" : -30
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.MQTT}}",
          "qualifier" : {
            "topic" : "MYERROR",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 211,
            "y" : -259
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.metadata.pipelineError);"
        },
        "outputs" : [ "WriteNew" ]
      }, {
        "name" : "Return",
        "display" : {
          "position" : {
            "x" : 436,
            "y" : 175
          }
        },
        "config" : {
          "type" : ".ReturnConfig"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform_1",
        "display" : {
          "position" : {
            "x" : 33,
            "y" : 241
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(\"test123\");"
        },
        "outputs" : [ "Return" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "CallableTrigger",
        "display" : {
          "position" : {
            "x" : -442,
            "y" : -4
          }
        },
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "inline",
            "model" : {
              "name" : "params",
              "tags" : [ ],
              "attributes" : [ {
                "attributeType" : "Internal",
                "name" : "test123",
                "nullable" : false,
                "required" : false,
                "array" : false,
                "defaultValue" : 1,
                "internalType" : "Any"
              }, {
                "attributeType" : "Internal",
                "name" : "test321",
                "nullable" : false,
                "required" : false,
                "array" : false,
                "internalType" : "Any"
              } ]
            }
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "ErrorHandlerTest",
      "groupAs" : "/ErrorHandler",
      "tags" : [ ],
      "inputStages" : [ "WriteNew" ],
      "stages" : [ {
        "name" : "Error",
        "display" : {
          "position" : {
            "x" : 320,
            "y" : -162
          }
        },
        "config" : {
          "type" : ".ErrorConfig",
          "errorMessage" : "Error"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 337,
            "y" : -279
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "f"
        },
        "outputs" : [ ]
      }, {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 354,
            "y" : -14
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.MQTT}}",
          "qualifier" : {
            "topic" : "myval",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "completion"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -501,
            "y" : -43
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.ComplexData}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "external",
        "reference" : "{{Pipeline.ErrorHandler}}"
      }
    }, {
      "name" : "FileFormats",
      "tags" : [ ],
      "inputStages" : [ "Transform" ],
      "stages" : [ {
        "name" : "Transform",
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "ParquetFormat", "CSVFormat", "JSONFormat" ]
      }, {
        "name" : "CSVFormat",
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : ","
        },
        "outputs" : [ "DynamicWrite" ]
      }, {
        "name" : "JSONFormat",
        "config" : {
          "type" : ".JSONFormatConfig",
          "outgoingType" : "File"
        },
        "outputs" : [ "DynamicWrite_1" ]
      }, {
        "name" : "ParquetFormat",
        "config" : {
          "type" : ".ParquetFormatConfig",
          "outgoingType" : "File"
        },
        "outputs" : [ "DynamicWrite_2" ]
      }, {
        "name" : "DynamicWrite",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.File}}",
          "qualifier" : {
            "base64Decoding" : true,
            "fileName" : "test.csv"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "DynamicWrite_1",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.File}}",
          "qualifier" : {
            "base64Decoding" : true,
            "fileName" : "test.json"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "DynamicWrite_2",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.File}}",
          "qualifier" : {
            "base64Decoding" : true,
            "fileName" : "test.parquet"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "Flatten",
      "tags" : [ ],
      "inputStages" : [ "Flatten" ],
      "stages" : [ {
        "name" : "Out",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ " {{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Flatten",
        "config" : {
          "type" : ".FlattenConfig",
          "delimiter" : "/"
        },
        "outputs" : [ "Out" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FlattenPeriod",
      "tags" : [ ],
      "inputStages" : [ "Flatten" ],
      "stages" : [ {
        "name" : "Out",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ " {{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Flatten",
        "config" : {
          "type" : ".FlattenConfig",
          "delimiter" : "."
        },
        "outputs" : [ "Out" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "Flatten_ComplexWArray_flow",
      "groupAs" : "/Pipelines/Flatten",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Pipeline.Flatten}}", "{{Connection.QA_MQTT_HIVEMQ.Test}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "Flatten_ComplexWArray",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "{{Connection.Webhook_FlowTriggers.PipelineFlow}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_MQTT_HIVEMQ.ComplexWArray}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatCSV2DArray_flow",
      "groupAs" : "/Pipelines/Format",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Pipeline.FormatCSVComma}}", "{{Pipeline.FormatCSVPipe}}", "{{Pipeline.FormatCSVQuote}}", "{{Pipeline.FormatCSVSpace}}", "{{Connection.CSV.Pipe_Comma_CTRL}}", "{{Connection.CSV.Pipe_Quote_CTRL}}", "{{Connection.CSV.Pipe_Space_CTRL}}", "{{Connection.CSV.Pipe_Pipe_CTRL}}", "{{Connection.QA_MQTT_HIVEMQ.Test}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FormatCSV2DArray",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.ComplexData}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatCSVComma",
      "tags" : [ ],
      "inputStages" : [ "ToCSVFile" ],
      "stages" : [ {
        "name" : "ToCSVFile",
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : ","
        },
        "outputs" : [ "WriteNewTarget" ]
      }, {
        "name" : "WriteNewTarget",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.FilePipelines}}",
          "qualifier" : {
            "fileName" : "ComplexDataW2DArray.csv",
            "base64Decoding" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatCSVPipe",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "FileOut",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.FilePipelines}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "CSV_Pipe_Pipe.csv"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "StageType",
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : "|"
        },
        "outputs" : [ "FileOut" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatCSVQuote",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "FileOut",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.FilePipelines}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "CSV_Pipe_Quote.csv"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "StageType",
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : "\""
        },
        "outputs" : [ "FileOut" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatCSVSQL_Base64_flow",
      "groupAs" : "/Pipelines/Format",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.FilePipelines.CSVBase64}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FormatCSVSQL_Base64",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.SelectAllTypes}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatCSVSQL_flow",
      "groupAs" : "/Pipelines/Format",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Pipeline.FormatCSVComma}}", "{{Pipeline.FormatCSVPipe}}", "{{Pipeline.FormatCSVQuote}}", "{{Pipeline.FormatCSVSpace}}", "{{Connection.CSV.Pipe_Comma_CTRL}}", "{{Connection.CSV.Pipe_Quote_CTRL}}", "{{Connection.CSV.Pipe_Space_CTRL}}", "{{Connection.CSV.Pipe_Pipe_CTRL}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FormatCSVSQL",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.SelectAllTypes}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatCSVSpace",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "FileOut",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.FilePipelines}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "CSV_Pipe_Space.csv"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "StageType",
        "config" : {
          "type" : ".CSVFormatConfig",
          "outgoingType" : "File",
          "delimiter" : " "
        },
        "outputs" : [ "FileOut" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatJSON",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "FileOut",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.FilePipelines}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "JSON_Pipe_SQL.json"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "StageType",
        "config" : {
          "type" : ".JSONFormatConfig",
          "outgoingType" : "File"
        },
        "outputs" : [ "FileOut" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatJSON2",
      "tags" : [ ],
      "inputStages" : [ "FileOut" ],
      "stages" : [ {
        "name" : "FileOut",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.FilePipelines}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "JSON_Pipe_SQL2.json"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "DecodeTest_flow",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_MQTT_HIVEMQ.DecodeTest}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatJSON2Darray_flow",
      "groupAs" : "/Pipelines/Format",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Pipeline.FormatJSON}}", "{{Connection.FilePipelines.JSON_Pipe_SQL_CTRL}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FormatJSON2Darray",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.ComplexDataW2DArray}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatJSONSQL_flow",
      "groupAs" : "/Pipelines/Format",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Pipeline.FormatJSON}}", "{{Connection.FilePipelines.JSON_Pipe_SQL_CTRL}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FormatJSONSQL",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.SelectAllTypes}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatParquet",
      "tags" : [ ],
      "inputStages" : [ "StageType" ],
      "stages" : [ {
        "name" : "WriteNewTarget",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.FilePipelines}}",
          "qualifier" : {
            "base64Decoding" : false,
            "fileName" : "ComplexDataW2DArray.parquet"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ "WriteTargets" ]
      }, {
        "name" : "StageType",
        "config" : {
          "type" : ".ParquetFormatConfig",
          "outgoingType" : "File"
        },
        "outputs" : [ "WriteNewTarget" ]
      }, {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatParquet2Darray_flow",
      "groupAs" : "/Pipelines/Format",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Pipeline.FormatParquet}}", "{{Connection.ParquetPipelines.ParquetCTRL}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FormatParquet2Darray",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.SpringApp.ComplexData}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "FormatParquetSQL_flow",
      "groupAs" : "/Pipelines/Format",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Pipeline.FormatParquet}}", "{{Connection.ParquetPipelines.Parquet_Pipe_CTRL}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "FormatParquetSQL",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.SelectAllTypes}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "NoConnectionOutput",
      "tags" : [ ],
      "inputStages" : [ "SizedBuffer" ],
      "stages" : [ {
        "name" : "WriteNewTarget",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "",
          "qualifier" : { },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "SizedBuffer",
        "config" : {
          "type" : ".SizedBufferConfig",
          "windowExpression" : "stage.setBufferKey(null);",
          "windowSize" : 2,
          "timeout" : {
            "duration" : 0,
            "units" : "Seconds"
          }
        },
        "outputs" : [ "WriteNewTarget" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "PostgresIndexEnabled_flow",
      "groupAs" : "/Postgres",
      "tags" : [ ],
      "inputStages" : [ "Targets" ],
      "stages" : [ {
        "name" : "Targets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "PostgresIndexEnabled",
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Exception",
            "interval" : {
              "duration" : 10,
              "units" : "Seconds"
            },
            "mode" : "OnChange",
            "expression" : "{{Connection.Webhook_FlowTriggers.PostgresFlow}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.QA_POSTGRES.IndexEnabled}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_HeaderSetWriteProperty",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "/addHeaderToQueue"
          },
          "qualifierExpression" : "stage.setWriteProperty(\"header\", \"header-val=test header value here\")",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_HeaderSetWriteProperty_SysVar_Coalesce",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "/addHeaderToQueue"
          },
          "qualifierExpression" : "stage.setWriteProperty(\"header\", \"header-val={{System.Variables.test1 ?? 'test'}}\")",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_HeaderSystemVars",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "/addHeaderToQueue",
            "header" : "header-val={{event.value.id}}"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_HeaderSystemVarsWriteProperty",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "/addHeaderToQueue"
          },
          "qualifierExpression" : "stage.setWriteProperty(\"header\", \"header-val={{System.Variables.TestVar1}} + {{System.Variables.TestVar1}}\")",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_HeaderUndefined",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "/addHeaderToQueue",
            "header" : "header-val=test{{System.Variables.TestVar2}}test"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_HeaderUndefined_Coalesce",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "header" : "header-val={{System.Variables.TestVar2 ?? \"test\"}}",
            "endpointURL" : "/addHeaderToQueue"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_URL2SystemVars",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "{{System.Variables.ForwardSlash}}{{System.Variables.addToQueue}}"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_URLFromInstanceTemplate",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "header" : "test",
            "endpointURL" : "{{this.endpointURL}}",
            "template" : "{{this.value}}"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_URLSetWriteProperty",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "header" : "test",
            "endpointURL" : "/add"
          },
          "qualifierExpression" : "stage.setWriteProperty(\"endpointURL\",\"/addToQueue\");",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "SpringQueue_DW_URLSystemVars",
      "tags" : [ ],
      "inputStages" : [ "Dynamic_Write" ],
      "stages" : [ {
        "name" : "Dynamic_Write",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.SpringApp}}",
          "qualifier" : {
            "method" : "POST",
            "bodyType" : "raw",
            "endpointURL" : "{{System.Variables.QueueURL}}"
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "test1234",
      "tags" : [ ],
      "inputStages" : [ "WriteTargets" ],
      "stages" : [ {
        "name" : "WriteTargets",
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ ],
          "references" : [ "{{Connection.SpringApp.queue}}" ],
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "WriteNewTarget",
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "",
          "qualifier" : { },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "test22",
      "tags" : [ ],
      "inputStages" : [ "Transform2" ],
      "stages" : [ {
        "name" : "Transform2",
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    } ],
    "tags" : [ {
      "name" : "TestTag"
    }, {
      "name" : "tag2"
    }, {
      "name" : "testtag"
    } ],
    "functions" : [ {
      "name" : "functions",
      "function" : "// This editor allows you to write JavaScript that\r\n// can be used across across all expressions.\r\n\r\n// Use console.log to output debug messages\r\nvar x = 2;       // Global scope\r\n\r\nfunction incrementX(){\r\n    x = x + 1;\r\n    return x;\r\n}\r\n\r\nfunction getX(){\r\n    return x;\r\n}\r\n\r\nfunction externalLib(){\r\n    var jsonata = require(\"jsonata\");\r\n    var data = {\r\n    example: [\r\n        {value: 1},\r\n        {value: 2},\r\n        {value: 3}\r\n    ]\r\n    };\r\n    var expression = jsonata(\"$sum(example.value)\");\r\n    return expression.evaluate(data);  // returns 24\r\n}\r\n\r\nfunction test() {\r\n\r\n    const payload = {\"filter\": \"inputName\", \"time\": 1234}; \r\n    console.log(payload);\r\n    return payload;\r\n\r\n}\r\n\r\nfunction myKey2() {\r\n    let key = \"Name2\";\r\n  return key;\r\n}\r\n\r\n\r\nfunction myKey() {\r\n        var jsonata = require(\"jsonata\");\r\n\r\n    var data = {\r\n    example: [\r\n        {value: 1},\r\n        {value: 2},\r\n        {value: 3}\r\n    ]\r\n    };\r\n    var expression = jsonata(\"$sum(example.value)\");\r\n    let key = \"Name\";\r\n  return key;\r\n}\r\n\r\nfunction square(x) {\r\n    return x * x + 1;\r\n}\r\n\r\nfunction isPrime(num) {\r\n    for(let i = 2, s = Math.sqrt(num); i <= s; i++)\r\n        if(num % i === 0) return false;\r\n    return num > 1;\r\n}\r\n\r\nfunction calcPrimes(num) {\r\n    let primes = [];\r\n    for (let i = 2; i <= num; ++i) {\r\n        if(isPrime(i))\r\n            primes.push(i);\r\n    }\r\n    return primes;\r\n}\r\n"
    } ],
    "namespace" : [ {
      "id" : "7ad980e8-bd55-418f-b83a-644b5f8d1507",
      "name" : "testcallpipe",
      "reference" : {
        "type" : "Pipeline",
        "name" : "ErrorHandler",
        "params" : { },
        "path" : ""
      }
    } ]
  },
  "network" : {
    "version" : 0,
    "groups" : [ {
      "name" : "test",
      "token" : "F7dCxZwwy3o5kogk2evc5L5tUjdFwoZi"
    } ],
    "hubs" : [ {
      "name" : "hb_remote_client",
      "description" : "",
      "clientId" : "5454d864-02cf-4aed-ada7-0a2b436a09fb",
      "networkGroup" : "test"
    } ]
  },
  "accessControl" : {
    "apiKeys" : [ {
      "description" : "For API automation",
      "friendlyName" : "u1748031",
      "expiration" : 0,
      "version" : 0,
      "algorithm" : "SHA-256",
      "user" : "u1748031779539",
      "hash" : "7U9sWlnfpLEVBwwnDike4R6NVJm+0JtE6q+ZFwPjy3U="
    }, {
      "description" : "For API automation",
      "friendlyName" : "u1748031",
      "expiration" : 0,
      "version" : 0,
      "algorithm" : "SHA-256",
      "user" : "u1748031937893",
      "hash" : "2uJe0OCPqA1QNrOqAZiTsz8DpNbM47L4vNNmDfhyVTQ="
    }, {
      "friendlyName" : "test",
      "expiration" : 1782259199000,
      "version" : 1,
      "algorithm" : "SHA-256",
      "user" : "administrator",
      "hash" : "SX31dqd3d5dROPjC734sr3qLvxMckYg1qJGu3eDWfoo="
    } ],
    "version" : 0,
    "roles" : [ {
      "name" : "admin",
      "policyVersion" : 1,
      "claims" : [ {
        "resources" : [ "*" ],
        "actions" : [ "*" ]
      } ]
    }, {
      "name" : "default",
      "policyVersion" : 1,
      "claims" : [ {
        "resources" : [ "*" ],
        "actions" : [ "read" ]
      }, {
        "resources" : [ "connection", "instance", "pipeline" ],
        "actions" : [ "*" ]
      } ]
    }, {
      "name" : "tagged",
      "policyVersion" : 1,
      "claims" : [ {
        "name" : "test",
        "resources" : [ "*" ],
        "actions" : [ "*" ],
        "scope" : {
          "contains" : {
            "tags" : [ "tag1" ]
          }
        }
      } ]
    }, {
      "name" : "tagged2",
      "policyVersion" : 1,
      "claims" : [ {
        "name" : "WeatherTag",
        "resources" : [ "broker", "connection", "condition", "function", "instance", "log", "model", "pipeline", "network" ],
        "actions" : [ "*" ],
        "scope" : {
          "contains" : {
            "tags" : [ "tag1" ]
          }
        }
      } ]
    } ],
    "users" : [ {
      "name" : "administrator",
      "credentials" : {
        "salt" : "SD8Jg877fN+EHfQ2nqb84A==",
        "hashedPassword" : "j81lGHU0ofi8ghVoMGno6I2MYJ7HqDoqTwXTyzRoXeRbdXZdAtySs1F6s0d+V8qcupPe0n6aZY5jbqVQVwDPHw=="
      },
      "policyVersion" : 1,
      "roles" : [ "admin" ],
      "claims" : [ ]
    }, {
      "name" : "u1748031779539",
      "credentials" : {
        "salt" : "kwU+PD8fVrhYKnwFt42Pdw==",
        "hashedPassword" : "waD06kwX+WQElUAa4m2FW/GUXF8TvHN6oLx2I2c/nzWP4YhKIwYSAg+dS9qc8qVe26QvlttCzNVi6EPTvhKkWg=="
      },
      "policyVersion" : 1,
      "roles" : [ ],
      "claims" : [ {
        "resources" : [ "*" ],
        "actions" : [ "*" ]
      } ]
    }, {
      "name" : "u1748031937893",
      "credentials" : {
        "salt" : "e66IEzI/4DoUnUr6dlywgw==",
        "hashedPassword" : "79F25Qd5DdT5doDpQUR2VkjhpTHW4+/JIWjPDkUvT1M6w/CStn1oV5n95crQ/eM7gmfqFpGlvsAs9wBi1QzR1A=="
      },
      "policyVersion" : 1,
      "roles" : [ ],
      "claims" : [ {
        "resources" : [ "*" ],
        "actions" : [ "*" ]
      } ]
    } ]
  },
  "system" : {
    "version" : 0,
    "variables" : [ {
      "name" : "instance_name",
      "value" : "hubinstance123"
    } ],
    "secrets" : [ {
      "type" : "Encrypted",
      "name" : "PAT",
      "value" : {
        "keyId" : "Ku3YIu+SRVA0xkwuTR6GUw==",
        "iv" : "hh9RMrErgtmCrSqUfSGMIQ==",
        "ciphertext" : "3q7mCXEkvPTV/LRi77vr1guEvXO9xEHnTH7D3OQGQzMs5dShDzsUzz5dmglCgA2e6D0xaT0vI7vy35V+c54B/9pw3N42WfXpyQezAfWQi9XBuEvnJuz2nMoyV9ZV917t"
      }
    } ],
    "certificates" : [ ],
    "settings" : {
      "version" : 0,
      "directories" : {
        "appData" : "/usr/local/highbyte/appData/",
        "storeForwardData" : "/usr/local/highbyte/storefiles/"
      },
      "api" : {
        "sessionTimeout" : {
          "duration" : 8,
          "units" : "Hours"
        }
      },
      "configuration" : {
        "scheme" : "http",
        "schemeCertificate" : "ssl-certificate-private-key",
        "port" : 45245,
        "centralConfig" : true,
        "autoSaveIntervalSeconds" : 60,
        "backupCopies" : 10
      },
      "hbMqttBroker" : {
        "enabled" : true,
        "allowAnonymous" : true,
        "endpoints" : [ {
          "hostname" : "0.0.0.0",
          "port" : 1885,
          "useSSL" : false,
          "certificateKeyAlias" : "",
          "protocol" : "mqtt.tcp"
        }, {
          "hostname" : "0.0.0.0",
          "port" : 1886,
          "useSSL" : false,
          "certificateKeyAlias" : "",
          "protocol" : "mqtt.ws"
        } ]
      },
      "restDataServer" : {
        "enabled" : true,
        "hostname" : "0.0.0.0",
        "port" : 8885,
        "useHttps" : false,
        "schemeCertificate" : "",
        "allowAnonymous" : false,
        "authenticationModes" : [ "API_KEY", "LOGIN" ],
        "mcpServerEnabled" : true,
        "mcpServerPort" : 45345
      },
      "log" : {
        "debugLogging" : "ALL",
        "fileSizeMB" : 102,
        "logAuditEvents" : false
      },
      "redundancy" : {
        "backup" : {
          "enabled" : false,
          "primary" : {
            "uri" : "http://hb-remote-client:45246",
            "pingIntervalSeconds" : 10,
            "pingAttempts" : 1
          }
        }
      },
      "expressionEngine" : {
        "allowExpressionEval" : false,
        "allowEnvironmentVariables" : false,
        "expressionEngineTimeoutSeconds" : 10,
        "hubBindingName" : "hub",
        "allowExpressionImports" : false
      },
      "backup" : {
        "mode" : "manual",
        "cronSchedule" : "0 3 * * *",
        "repo" : {
          "type" : "git",
          "name" : "HubBackup",
          "uri" : "https://github.com/hbqatesting/deployments_pub",
          "author" : "HighByte IntelligenceHub",
          "email" : "hbqatesting@gmail.com",
          "auth" : {
            "type" : "pass",
            "username" : "hbqatesting@gmail.com",
            "password" : {
              "type" : "Reference",
              "value" : "PAT"
            }
          }
        },
        "branch" : "main",
        "deployFile" : "intelligencehub-deployment.json"
      }
    }
  }
}